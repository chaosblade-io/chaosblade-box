{
  "info": {
    "name": "JMX文件上传功能测试",
    "description": "ChaosBlade-Box JMX文件上传功能完整测试用例",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:7001",
      "type": "string"
    },
    {
      "key": "engineEndpoint",
      "value": "http://1.94.151.57:8008",
      "type": "string"
    },
    {
      "key": "uploadedFileUrl",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. 正常上传JMX文件",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "file",
              "type": "file",
              "src": "test_plan.jmx",
              "description": "选择一个有效的.jmx文件"
            },
            {
              "key": "endpoint",
              "value": "{{engineEndpoint}}",
              "type": "text"
            },
            {
              "key": "namespace",
              "value": "default",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/UploadJmxFile",
          "host": ["{{baseUrl}}"],
          "path": ["UploadJmxFile"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has success field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    pm.expect(jsonData.success).to.be.true;",
              "});",
              "",
              "pm.test(\"Response has complete file info\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.result).to.have.property('fileName');",
              "    pm.expect(jsonData.result).to.have.property('originalFileName');",
              "    pm.expect(jsonData.result).to.have.property('fileType');",
              "    pm.expect(jsonData.result).to.have.property('fileSize');",
              "    pm.expect(jsonData.result).to.have.property('accessUrl');",
              "    pm.expect(jsonData.result.fileType).to.eql('jmx');",
              "    ",
              "    // 保存accessUrl用于后续测试",
              "    pm.collectionVariables.set('uploadedFileUrl', jsonData.result.accessUrl);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "2. 文件格式验证 - 上传非JMX文件",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "file",
              "type": "file",
              "src": "test.txt",
              "description": "选择一个非.jmx文件"
            },
            {
              "key": "endpoint",
              "value": "{{engineEndpoint}}",
              "type": "text"
            },
            {
              "key": "namespace",
              "value": "default",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/UploadJmxFile",
          "host": ["{{baseUrl}}"],
          "path": ["UploadJmxFile"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Should fail with file format error\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.false;",
              "    pm.expect(jsonData.message).to.include('文件格式必须为.jmx');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "3. 端点格式验证 - 无效端点",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "file",
              "type": "file",
              "src": "test_plan.jmx"
            },
            {
              "key": "endpoint",
              "value": "invalid-url",
              "type": "text"
            },
            {
              "key": "namespace",
              "value": "default",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/UploadJmxFile",
          "host": ["{{baseUrl}}"],
          "path": ["UploadJmxFile"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Should fail with endpoint format error\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.false;",
              "    pm.expect(jsonData.message).to.include('压测引擎端点格式无效');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "4. 空端点验证",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "file",
              "type": "file",
              "src": "test_plan.jmx"
            },
            {
              "key": "endpoint",
              "value": "",
              "type": "text"
            },
            {
              "key": "namespace",
              "value": "default",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/UploadJmxFile",
          "host": ["{{baseUrl}}"],
          "path": ["UploadJmxFile"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Should fail with empty endpoint error\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.false;",
              "    pm.expect(jsonData.message).to.include('压测引擎端点不能为空');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "5. 不可达端点测试",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "file",
              "type": "file",
              "src": "test_plan.jmx"
            },
            {
              "key": "endpoint",
              "value": "http://192.168.255.255:8008",
              "type": "text"
            },
            {
              "key": "namespace",
              "value": "default",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/UploadJmxFile",
          "host": ["{{baseUrl}}"],
          "path": ["UploadJmxFile"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Should fail with network error\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.false;",
              "    pm.expect(jsonData.message).to.include('文件上传失败');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "6. 集成测试 - 创建压测定义",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"基于上传文件的压测定义\",\n  \"engineType\": \"JMETER\",\n  \"endpoint\": \"{{engineEndpoint}}\",\n  \"entry\": \"JMX\",\n  \"contentRef\": \"{{uploadedFileUrl}}\",\n  \"namespace\": \"default\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/CreateLoadTestDefinition",
          "host": ["{{baseUrl}}"],
          "path": ["CreateLoadTestDefinition"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Definition created successfully\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.result).to.match(/^ldef_/);",
              "});"
            ]
          }
        }
      ]
    }
  ]
}
